name: Automatically validate the Fibonacci Calculator Infrastructure
on:
  pull_request: 
    branches:
      - '*'
    paths:
      - 'iac/fibonacci_app_v1/*.tf'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Run Terratest
    
    defaults:
      run:
        working-directory: ./tests
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Authenticate with Azure
      uses: azure/login@v2
      with:
        creds: '{"clientId": "${{ secrets.ARM_CLIENT_ID }}", "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}", "tenantId": "${{ secrets.ARM_TENANT_ID }}", "subscriptionId": "${{ vars.ARM_SUBSCRIPTION_ID }}"}'
 
    - name: get runner ip
      id: runner_ip
      run: |
        IP_ADDR=$(curl -s https://ifconfig.me/ip)
        echo "IPADDR=$IP_ADDR" >> $GITHUB_OUTPUT

    - name: modify state storage acl
      run: |
        az storage account network-rule add --account-name ${{ vars.STATE_STORAGE_ACCOUNT }} --ip-address ${{ steps.runner_ip.outputs.IPADDR }} --subscription ${{ vars.ARM_SUBSCRIPTION_ID }}  > /dev/null 2>&1
        echo "Pausing for 60 seconds to ensure the ACL has been set..."
        sleep 60
        
    - name: install terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ vars.TERRAFORM_VERSION }}

    - name: Run tests
      id: tests
      run: |

        # Setup Go environment
        GOPATH="$HOME/go"
        export GOPATH

        PATH=$PATH:$GOPATH/bin
        export PATH
        
        # export variables as environment variables
        export ARM_CLIENT_OBJECT_ID=${{ secrets.ARM_CLIENT_OBJECT_ID }}
        export ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}
        export ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}
        export ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}
        export ARM_SUBSCRIPTION_ID=${{ vars.ARM_SUBSCRIPTION_ID }}
        export ARM_USE_AZUREAD=true
        export STORAGE_ACCOUNT_NAME=${{ vars.STATE_STORAGE_ACCOUNT }}
        export CONTAINER_NAME=${{ vars.FB_STATE_STORAGE_CONTAINER }}
        export KEY=${{ vars.FB_STATE_FILE_NAME }}
        export DOCKER_IMAGE_TAG=sbx
        export PSQL_ADMIN_PASSWORD=${{ secrets.PSQL_ADMIN_PASSWORD }}
        export PSQL_ADMIN_USERNAME=${{ secrets.PSQL_ADMIN_USERNAME }}

        # Install Go Junit reporter
        go install github.com/jstemmer/go-junit-report/v2@latest

        # Run Go tests
        # go test -v 2>&1 ./... | go-junit-report -set-exit-code > report.xml
        go test -v -timeout 1200s ./...

        # List Directory

    # - name: Upload test summary
    #   uses: test-summary/action@v1
    #   with:
    #     paths: |
    #       tests/report.xml
    #   if: always()
    
    - name: modify state storage acl - clean up
      if: always()
      run: |
        az storage account network-rule remove --account-name ${{ vars.STATE_STORAGE_ACCOUNT }} --ip-address ${{ steps.runner_ip.outputs.IPADDR }}  --subscription ${{ vars.ARM_SUBSCRIPTION_ID }}  > /dev/null 2>&1

      